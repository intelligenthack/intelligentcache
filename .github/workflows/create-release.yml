name: Create a new release

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.*

    - name: Install GitVersion.Tool
      run: dotnet tool install --global GitVersion.Tool /output buildserver

    # - name: Build
    #   run: dotnet build --configuration Release
      
    # - name: Run tests
    #   run: dotnet test --configuration Release --no-restore

    # - name: Pack
    #   run: dotnet pack ./DistributedCache/DistributedCache.csproj --configuration Release --no-restore
      
    # - name: Push the generated package to NuGet.org registry
    #   run: |
    #     $version = dir DistributedCache/bin/Release/*.nupkg | % { $m = $_.Name -match "IntelligentHack\.DistributedCache\.(.*)\.nupkg"; $Matches[1] }
    #     dotnet nuget push ./DistributedCache/bin/Release/IntelligentHack.DistributedCache.$version.nupkg --skip-duplicate --no-symbols true --source nuget.org --api-key ${{secrets.NUGET_API_KEY}}
    #     dotnet nuget delete IntelligentHack.DistributedCache $version --non-interactive --source nuget.org --api-key ${{secrets.NUGET_API_KEY}}
